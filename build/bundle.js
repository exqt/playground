!function(){"use strict";class t{constructor(t,e,r){this.name=t,this.canvas=document.createElement("canvas"),this.canvas.width=400|e,this.canvas.height=400|r,this.canvas.id=t+"-canvas",this.canvas.addEventListener("click",this.onClick),document.querySelector("#canvas-wrapper").appendChild(this.canvas)}release(){let t=document.querySelector("#canvas-wrapper");for(;t.hasChildNodes();)t.removeChild(t.lastChild)}onDrop(t){}onClick(){}update(t){}}function e(t,e,i){const o=r(t,t.VERTEX_SHADER,e),n=r(t,t.FRAGMENT_SHADER,i),a=t.createProgram();return t.attachShader(a,o),t.attachShader(a,n),t.linkProgram(a),t.getProgramParameter(a,t.LINK_STATUS)?a:(alert("Unable to initialize the shader program: "+t.getProgramInfoLog(a)),null)}function r(t,e,r){const i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)?i:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(i)),t.deleteShader(i),null)}function i(t){var e=t.createTexture();return t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),e}var o="undefined"!=typeof Float32Array?Float32Array:Array;function n(){var t=new o(16);return o!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function a(t,e,r){var i=new o(3);return i[0]=t,i[1]=e,i[2]=r,i}Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var s,c;s=new o(3),o!=Float32Array&&(s[0]=0,s[1]=0,s[2]=0),c=s;const l={colorTriangle:class extends t{constructor(){super("color-triangle",400,400),this.time=0;let t=this.canvas.getContext("webgl");this.program=e(t,"\nattribute vec2 aPosition;\nattribute vec4 aColor;\nuniform mat2 uMat;\nvarying vec4 vColor;\n\nvoid main() {\n  vColor = aColor;\n  gl_Position = vec4(uMat*aPosition, 1.0, 1.0);\n}\n","\nprecision mediump float;\n\nvarying vec4 vColor;\n\nvoid main() {\n  gl_FragColor = vColor;\n}\n"),t.useProgram(this.program),this.location={position:t.getAttribLocation(this.program,"aPosition"),color:t.getAttribLocation(this.program,"aColor"),mat:t.getUniformLocation(this.program,"uMat")},this.buffer={},this.buffer.position=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.bufferData(t.ARRAY_BUFFER,new Float32Array([Math.cos(.5*Math.PI),Math.sin(.5*Math.PI),Math.cos(7/12*2*Math.PI),Math.sin(7/12*2*Math.PI),Math.cos(11/12*2*Math.PI),Math.sin(11/12*2*Math.PI)]),t.STATIC_DRAW),this.buffer.color=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.color),t.bufferData(t.ARRAY_BUFFER,new Float32Array([1,0,0,1,0,1,0,1,0,0,1,1]),t.STATIC_DRAW),t.enableVertexAttribArray(this.location.position),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.vertexAttribPointer(this.location.position,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(this.location.color),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.color),t.vertexAttribPointer(this.location.color,4,t.FLOAT,!1,0,0)}update(t){this.time=this.time+t;let e=this.canvas.getContext("webgl");e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),e.uniformMatrix2fv(this.location.mat,!1,new Float32Array([Math.cos(this.time),Math.sin(this.time),-Math.sin(this.time),Math.cos(this.time)])),e.drawArrays(e.TRIANGLES,0,3)}},pixelSort:class extends t{constructor(){super("pixel-sort",400,400),this.input=document.createElement("input"),this.input.type="file",this.input.addEventListener("change",t=>{let e=t.target.files[0];this.onDrop(e)}),document.querySelector("#canvas-wrapper").append(this.input);let t=this.canvas.getContext("webgl");this.program=e(t,"\nattribute vec2 aPosition;\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\nuniform float uYflip;\n\nvoid main() {\n  vTexCoord = aTexCoord;\n  if(uYflip == 1.0) vTexCoord.y = 1.0 - vTexCoord.y;\n  gl_Position = vec4(aPosition, 1.0, 1.0);\n}\n","\nprecision mediump float;\n\nuniform sampler2D uImage;\nuniform vec2 uTextureSize;\nuniform float uStep;\nvarying vec2 vTexCoord;\n\nfloat brightness(vec4 c) {\n  return 0.2126*c.x + 0.7152*c.y + 0.0722*c.z;\n}\n\nfloat comp(vec4 a, vec4 b) {\n  return brightness(a) - brightness(b);\n}\n\nvoid main() {\n  vec2 onePixel = vec2(1.0, 1.0) / uTextureSize;\n  vec4 color = vec4(0.0);\n  \n  float parity = fract(uStep/2.0 + vTexCoord.y*uTextureSize.y/2.0);\n\n  if (parity < 0.5) {\n    vec4 c1 = texture2D(uImage, vTexCoord);\n    vec4 c2 = texture2D(uImage, vTexCoord + vec2(0, onePixel.y));\n\n    if (vTexCoord.y + onePixel.y >= 1.0) color = c1;\n    else color = comp(c1, c2) >= 0.0 ? c1 : c2;\n  }\n  else {\n    vec4 c1 = texture2D(uImage, vTexCoord - vec2(0, onePixel.y));\n    vec4 c2 = texture2D(uImage, vTexCoord);\n\n    if (vTexCoord.y - onePixel.y <= 0.0) color = c2;\n    else color = comp(c2, c1) < 0.0 ? c2 : c1;\n  }\n  \n  gl_FragColor = color;\n}\n"),t.useProgram(this.program),this.location={position:t.getAttribLocation(this.program,"aPosition"),texCoord:t.getAttribLocation(this.program,"aTexCoord"),textureSize:t.getUniformLocation(this.program,"uTextureSize"),step:t.getUniformLocation(this.program,"uStep"),yflip:t.getUniformLocation(this.program,"uYflip")},this.buffer={},this.buffer.position=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),t.STATIC_DRAW),this.buffer.texCoord=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.texCoord),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),t.STATIC_DRAW),t.enableVertexAttribArray(this.location.position),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.vertexAttribPointer(this.location.position,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(this.location.texCoord),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.texCoord),t.vertexAttribPointer(this.location.texCoord,2,t.FLOAT,!1,0,0)}onDrop(t){let e=new FileReader;e.onload=t=>{let e=new Image;e.src=t.target.result,e.onload=()=>{this.setImage(e)}},e.readAsDataURL(t)}setImage(t){let e=this.canvas.getContext("webgl");this.canvas.width=t.width,this.canvas.height=t.height,this.originalImageTexture=i(e),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),this.textures=[],this.framebuffers=[];for(let r=0;r<2;++r){let r=i(e);this.textures.push(r),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t.width,t.height,0,e.RGBA,e.UNSIGNED_BYTE,null);let o=e.createFramebuffer();this.framebuffers.push(o),e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0)}e.viewport(0,0,this.canvas.width,this.canvas.height),this.step=0,e.uniform2f(this.location.textureSize,t.width,t.height),e.bindTexture(e.TEXTURE_2D,this.originalImageTexture)}update(t){if(!this.originalImageTexture)return;let e=this.canvas.getContext("webgl"),r=t=>{t|=0,e.clearColor(0,1,0,1),e.clear(e.COLOR_BUFFER_BIT),e.uniform1f(this.location.step,this.step),e.uniform1f(this.location.yflip,t),e.drawArrays(e.TRIANGLES,0,6)};e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffers[this.step%2]),r(),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindTexture(e.TEXTURE_2D,this.textures[this.step%2]),r(1),this.step++}},cube3d:class extends t{constructor(){super("cube3d",400,400),this.time=0;let t=this.canvas.getContext("webgl");this.program=e(t,"\nattribute vec4 aPosition;\nattribute vec3 aNormal;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec4 vPosition;\nvarying vec3 vNormal;\n\nvoid main() {\n  mat4 projectionView = uProjection * uView;\n\n  vPosition = aPosition;\n  vNormal = aNormal;\n\n  gl_Position = projectionView * vPosition;\n}\n","\nprecision mediump float;\n\nvarying vec4 vPosition;\nvarying vec3 vNormal;\n\nuniform vec3 uLightPosition;\n\nvoid main() {\n  vec3 lightDir = normalize(uLightPosition - vPosition.xyz);\n  float dotnl = max(dot(vNormal, lightDir), 0.0);\n  \n  float L = 0.2 + dotnl;\n\n  gl_FragColor = vec4(vec3(L), 1.0);\n}\n"),t.useProgram(this.program),this.location={position:t.getAttribLocation(this.program,"aPosition"),normal:t.getAttribLocation(this.program,"aNormal"),view:t.getUniformLocation(this.program,"uView"),projection:t.getUniformLocation(this.program,"uProjection"),lightPosition:t.getUniformLocation(this.program,"uLightPosition")},this.buffer={},this.buffer.position=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),t.STATIC_DRAW),this.buffer.normal=t.createBuffer();let r=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],i=[];for(let t=0;t<6;t++)for(let e=0;e<4;e++)i.push(r[t][0]),i.push(r[t][1]),i.push(r[t][2]);t.bindBuffer(t.ARRAY_BUFFER,this.buffer.normal),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW),this.buffer.indices=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffer.indices),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),t.STATIC_DRAW),t.enableVertexAttribArray(this.location.position),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.position),t.vertexAttribPointer(this.location.position,3,t.FLOAT,!1,0,0),t.enableVertexAttribArray(this.location.normal),t.bindBuffer(t.ARRAY_BUFFER,this.buffer.normal),t.vertexAttribPointer(this.location.normal,3,t.FLOAT,!1,0,0)}update(t){this.time=this.time+t;let e=this.canvas.getContext("webgl");e.clearColor(.1,.1,.1,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);let r=45*Math.PI/180,i=this.canvas.width/this.canvas.height,o=n();!function(t,e,r,i,o){var n,a=1/Math.tan(e/2);t[0]=a/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=o&&o!==1/0?(n=1/(i-o),t[10]=(o+i)*n,t[14]=2*o*i*n):(t[10]=-1,t[14]=-2*i)}(o,r,i,.1,100);let s=n(),c=Math.cos(this.time),l=Math.sin(this.time);!function(t,e,r,i){var o,n,a,s,c,l,h,u,f,m,A=e[0],v=e[1],p=e[2],d=i[0],g=i[1],R=i[2],T=r[0],b=r[1],E=r[2];Math.abs(A-T)<1e-6&&Math.abs(v-b)<1e-6&&Math.abs(p-E)<1e-6?function(t){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(t):(h=A-T,u=v-b,f=p-E,o=g*(f*=m=1/Math.hypot(h,u,f))-R*(u*=m),n=R*(h*=m)-d*f,a=d*u-g*h,(m=Math.hypot(o,n,a))?(o*=m=1/m,n*=m,a*=m):(o=0,n=0,a=0),s=u*a-f*n,c=f*o-h*a,l=h*n-u*o,(m=Math.hypot(s,c,l))?(s*=m=1/m,c*=m,l*=m):(s=0,c=0,l=0),t[0]=o,t[1]=s,t[2]=h,t[3]=0,t[4]=n,t[5]=c,t[6]=u,t[7]=0,t[8]=a,t[9]=l,t[10]=f,t[11]=0,t[12]=-(o*A+n*v+a*p),t[13]=-(s*A+c*v+l*p),t[14]=-(h*A+u*v+f*p),t[15]=1)}(s,a(6*c,3*Math.sin(this.time),6*l),a(0,0,0),a(0,1,0)),e.uniformMatrix4fv(this.location.projection,!1,o),e.uniformMatrix4fv(this.location.view,!1,s),e.uniform3f(this.location.lightPosition,4,3,2),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.buffer.indices),e.drawElements(e.TRIANGLES,36,e.UNSIGNED_SHORT,0)}}};let h,u=null,f=document.querySelector("#scene-select");function m(t){return!!l[t]&&(f.value=t,u&&u.release(),u=new l[t],!0)}f.onchange=t=>{m(f.value)},document.ondragover=t=>{t.stopPropagation(),t.preventDefault()},document.ondrop=t=>{if(t.stopPropagation(),t.preventDefault(),u){let e=t.dataTransfer.files[0];e&&u.onDrop(e)}};for(let[t,e]of Object.entries(l)){let e=document.createElement("option");e.value=t,e.text=t,f.append(e)}m(new URLSearchParams(window.location.search).get("scene"))||m("colorTriangle");const A=t=>{void 0===h&&(h=t);const e=(t-h)/1e3;u&&u.update(e),h=t,window.requestAnimationFrame(A)};window.requestAnimationFrame(A)}();
//# sourceMappingURL=bundle.js.map
